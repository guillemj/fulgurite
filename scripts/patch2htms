#!/bin/bash
#
# patch2htms patchdir builddir
#
# $Id: patch2htms,v 1.10 2003/09/20 22:48:32 guillem Exp $
#
#	generates an htms file from a list of patches in rfc822 format,
#	uses builddir to output all temp files and the result, and patchdir
#	is the dir from where the relative paths to patches is taken.
#
# Copyright (C) 2003 Guillem Jover <guillem@hadrons.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#

PROGRAM=patch2htms

SCRIPTDIR=$(dirname $0)
BASENAME=${1:-patches}
PATCHDIR=$(readlink -f $2)
BUILDDIR=$(readlink -f ${3:-$(pwd)})

iso-date ()
{
	date -Iseconds | tr 'T' ' '
}

parse_rfc822 ()
{
	filename=$1
	title="$filename"

	echo "    <patch-title href=\"$filename\">$title</patch-title>"
	echo "    <patch-description>"

	IFS=""
	prev_entry=empty
	cat $filename | while read line
	do
		line=`echo "$line"|sed -e 's%[[:space:]]*$%%' \
			-e 's%<%\&lt;%g; s%>%\&gt;%g'`

		# End of RFC822 header data
		if [ ${#line} -eq 0 ]; then break; fi

		# Split the line
		OLD_IFS=$IFS
		IFS=":"
		set -- $line
		IFS=$OLD_IFS

		field="$1"
		shift
		content="$@"

		# Don't show Author
		if [ "$field" = "Author" ]; then continue; fi

		if [ "$field" = "Status" ]
		then
			field_status=$(echo $content | tr '[:upper:] ' '[:lower:]-')
			echo $field_status >&2
		fi

		if [ "${line:0:1}" == " " ]
		then
			if [ $prev_entry = "field" ]
			then
				echo " <br />"
			fi

			entry="$(echo "$line"|sed -e 's%^ \.%<br />%; s%[.:]$%&<br />%')"
			echo "      $entry"
			prev_entry=description
		else
			entry="<b>$field: $content</b>"
			if [ $prev_entry != "empty" ]; then
				echo "</li>"
			fi
			printf "      <li>$entry"
			prev_entry=field
		fi
	done

	echo "      </li>"
	echo "    </patch-description>"
	echo
}

generate_body ()
{
	# XXX: Nasty Hack fix ASAP
	for f in `find $BASENAME/ -name '*.patch'`
	do
		parse_rfc822 $f > $BUILDDIR/$BASENAME.entry.htms 2> $BUILDDIR/$BASENAME.status
		Status=$(cat $BUILDDIR/$BASENAME.status)
		echo $f: $Status
		cat $BUILDDIR/$BASENAME.entry.htms >> $BUILDDIR/$BASENAME.body$Status.htms
	done
}

generate_htms ()
{
	cat > $BUILDDIR/$BASENAME.htms <<-HEADER
	<sgml-doctype>
	<html>
	<head>
	  <content-meta>
	  <title>Patches</title>
	  <language-meta>
	  <common-meta>
	  <meta name="Generator" content="rfc822_to_html \$Revision: 1.10 $ ">
	  <common-style>
	</head>
	<body>
	  <page-index>
	    <index-entry href="./">Home</index-entry>
	
	    <index-separator>

	    <index-entry href="#not-applied">Not Applied</index-entry>
	    <index-entry href="#applied">Applied</index-entry>
	    <index-entry href="#fixed">Fixed</index-entry>
	  </page-index>
	
	  <page-contents>
	    <h1>Patches List</h1>
	
	HEADER

	for Status in not-applied applied fixed
	do
		if [ -e $BUILDDIR/$BASENAME.body-$Status.htms ]
		then
			Status_Note=$(echo $Status | tr '-' ' ')
			cat >> $BUILDDIR/$BASENAME.htms <<-SECTION
			    <h2><a id="$Status">Patches $Status_Note</a></h2>
			SECTION
			cat $BUILDDIR/$BASENAME.body-$Status.htms >> $BUILDDIR/$BASENAME.htms
		fi
	done

	if [ -e $BUILDDIR/$BASENAME.body.htms ]
	then
		cat >> $BUILDDIR/$BASENAME.htms <<-SECTION
		    <hr>
		    <h2><a id="unkwnown">Patches unkwnown status</a></h2>
		SECTION
		cat $BUILDDIR/$BASENAME.body.htms >> $BUILDDIR/$BASENAME.htms
	fi

	cat >> $BUILDDIR/$BASENAME.htms <<-FOOTER
	  </page-contents>
	
	  <page-separator>
	
	  <page-footer>
	  Automatically generated on: $(iso-date)
	  </page-footer>
	
	</body>
	</html>
	FOOTER
}

#
# Main program
#

generate_body
generate_htms

cd $BUILDDIR
rm -f $BASENAME.body* $BASENAME.entry* $BASENAME.status

exit 0

